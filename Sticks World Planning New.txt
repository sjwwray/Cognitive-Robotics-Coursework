/* Event calculus axioms */

axiom(holds(F,T2),
	[happens(A,T1), before(T1,T2), initiates(A,F,T1), not(clipped(T1,F,T2))]).

axiom(holds(F,T),
	[initially(F), not(clipped(0,F,T))]).

axiom(clipped(T1,F,T3),
	[happens(A,T2), terminates(A,F,T2), before(T1,T2), before(T2,T3)]).


/* Sensor events */

axiom(happens(see(X),T1),
	[happens(seek_left,T1), holds(facing(Y),T2), before(T1,T2), happens(initialise(loc(X,Y)),T2)]).

axiom(happens(see(X),T1),
	[happens(seek_right,T1), holds(facing(Y),T2), before(T1,T2), happens(initialise(loc(X,Y)),T2)]).

axiom(happens(nothing,T),
	[happens(approach,T)]).

axiom(happens(nothing,T),
        [happens(pickup,T)]).

axiom(happens(nothing,T),
        [happens(putdown,T)]).


/* Effect axioms */

axiom(initiates(initialise(F),F,T),[]).

axiom(initiates(seek_left,knowcol(Z),T),[holds(facing(Y),T),next_left(Z,Y)]).

axiom(initiates(seek_right,knowcol(Z),T),[holds(facing(Y),T),next_left(Y,Z)]).

axiom(initiates(approach,at(X),T),[holds(facing(X),T)]).

axiom(initiates(seek_left,facing(X),T),[holds(facing(Y),T),next_left(X,Y)]).

axiom(initiates(seek_right,facing(X),T),[holds(facing(Y),T),next_left(Y,X)]).

axiom(initiates(pickup,got(X),T),[holds(loc(X,Y),T),holds(at(Y),T)]).

axiom(initiates(putdown,loc(X,Y),T),[holds(at(Y),T),holds(got(X),T)]).

axiom(terminates(approach,at(Y),T),[]).

axiom(terminates(seek_left,facing(Y),T),[]).

axiom(terminates(seek_right,facing(Y),T),[]).

axiom(terminates(pickup,loc(X,Y),T),[holds(at(Y),T)]).

axiom(terminates(putdown,got(X),T),[]).


/* Initial situation */

axiom(next_left(a,b),[]).

axiom(next_left(b,c),[]).

axiom(next_left(c,a),[]).

axiom(initially(facing(b)),[]).

axiom(eq(X,X),[]).


/* Abduction policy */

abducible(pln,happens(approach,T)) :- skolemise(T).
abducible(pln,happens(seek_left,T)) :- skolemise(T).
abducible(pln,happens(seek_right,T)) :- skolemise(T).
abducible(pln,happens(pickup,T)) :- skolemise(T).
abducible(pln,happens(putdown,T)) :- skolemise(T).

abducible(_,before(T1,T2)) :-
	skolemise(T1), skolemise(T2).

abducible(pcv,happens(A,T)) :- skolemise(T).

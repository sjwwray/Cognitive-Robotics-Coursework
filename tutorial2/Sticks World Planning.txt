/*
   Sticks World axioms for use with abductive meta-interpreter
   Planning version - initial situation known, plan abducible
*/


/* Event calculus axioms */

axiom(holds(F,T2),
     [happens(A,T1), before(T1,T2),
     initiates(A,F,T1),
     not(clipped(T1,F,T2))]).

axiom(holds(F,T),[initially(F), not(clipped(0,F,T))]).

axiom(clipped(T1,F,T3),
     [happens(A,T2),
     terminates(A,F,T2),
     before(T1,T2), before(T2,T3)]).


/* Effect axioms */

axiom(initiates(forwards,at_edge,T),[]).

axiom(initiates(approach,in_front(X),T),[holds(visible(X),T)]).

axiom(initiates(seek_left,visible(X),T),
     [holds(visible(Y),T),next_left(X,Y)]).

axiom(initiates(seek_right,visible(X),T),
     [holds(visible(Y),T),next_left(Y,X)]).

axiom(initiates(pickup,got(X),T),[holds(in_front(X),T)]).

axiom(initiates(putdown,tidy(X),T),[holds(got(X),T),holds(at_edge,T)]).


axiom(terminates(forwards,in_front(X),T),[]).

axiom(terminates(approach,at_edge,T),[]).

axiom(terminates(seek_right,visible(X),T),[]).

axiom(terminates(seek_left,visible(X),T),[]).

axiom(terminates(pickup,visible(X),T),[]).

axiom(terminates(pickup,in_front(X),T),[]).

axiom(terminates(putdown,got(X),T),[]).


/* Initial situation */

axiom(next_left(blue,green),[]).

axiom(next_left(green,red),[]).

axiom(next_left(red,blue),[]).

axiom(initially(visible(green)),[]).


axiom(eq(X,X),[]).


/* Abduction policy */

abducible(happens(A,T)) :- skolemise(T).
abducible(before(T1,T2)) :-
     skolemise(T1), skolemise(T2).


/*
   Sample queries:
   abdemo([holds(visible(blue),T)],[],R,[],N).
   abdemo([holds(in_front(blue),T)],[],R,[],N).
   abdemo([holds(tidy(blue),T)],[],R,[],N).
*/

